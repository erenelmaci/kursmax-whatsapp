name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  release:
    runs-on: windows-latest
    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install dependencies
        run: npm install

      - name: Install Puppeteer Chromium
        run: npx puppeteer browsers install chrome

      - name: Build Windows
        run: npm run build:win

      - name: Upload Windows Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: |
            dist/KursMax-WhatsApp-Setup-${{ github.ref_name }}.exe
            dist/latest.yml

      - name: Sürümden v harfini kaldır
        run: echo "RELEASE_VERSION=${GITHUB_REF_NAME#v}" >> $GITHUB_ENV

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/KursMax-WhatsApp-Setup-${{ env.RELEASE_VERSION }}.exe
            dist/latest.yml
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  mac-release:
    runs-on: macos-latest
    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install dependencies
        run: npm install

      - name: Install Puppeteer Chromium
        run: npx puppeteer browsers install chrome

      - name: Build Mac
        run: npm run build:mac

      - name: List dist contents
        run: ls -la dist/

      - name: Upload Mac Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: mac-build
          path: |
            dist/KursMax-WhatsApp-${{ github.ref_name }}-arm64.dmg
            dist/KursMax-WhatsApp-${{ github.ref_name }}-x64.dmg
            dist/latest-mac.yml

      - name: Sürümden v harfini kaldır
        run: echo "RELEASE_VERSION=${GITHUB_REF_NAME#v}" >> $GITHUB_ENV

      - name: Upload Mac Release Assets
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/KursMax-WhatsApp-${{ env.RELEASE_VERSION }}-arm64.dmg
            dist/KursMax-WhatsApp-${{ env.RELEASE_VERSION }}-x64.dmg
            dist/latest-mac.yml
          draft: false
          prerelease: false
          tag_name: ${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
